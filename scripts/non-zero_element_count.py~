#!/usr/bin/env python3

import numpy as np
from scipy.linalg import block_diag

I1 = [[1,0,8],[0,6,0],[0,0,0]]
I2 = [[1,0],[0,0],[0,9],[0,4]]
print("Enter matrix1 elements") 
#I1 = input()                         # take matrix1 input
print(np.matrix(I1))                     
s1=np.shape(I1)                      # dimensions of matrix1
print(s1)                   
r1=s1[0];                            # get number of rows of matrix1
c1=s1[1];                            # get number of columns of matrix1

print("Enter matrix2 elements") 
#I2 = input()                         # take matrix2 input 
print(np.matrix(I2))           
s2=np.shape(I2)                      # dimensions of matrix2 
print(s2)  
r2=s2[0];                            # get number of rows of matrix2                 
c2=s2[1];                            # get number of columns of matrix2


I =block_diag(I1,I2)
r=r1+r2
c=c1+c2
print(I)
count1=0
count2=0

def non_zero_element_count(matrix,column_number):
  if matrix == "I1":
    print("matrix I1 detected")  
    for i in range(0,r1):
       if I[i,column_number]==0:
         count1=count1+1
         print(count1) 
    return count1 
  elif matrix=="I2":
    count2=0
    for j in range(r1,r1+r2):
       if I[j,column_number]==0:
         count2=count2+1   
    return count2



for i1 in range(0,r1):
   for j1 in range(0,c1):
      for i2 in range(r1,r1+r2):
         for j2 in range(c1,c1+c2):
            print("function call being made")
            a = non_zero_element_count(I1,j1)
            print("function call done")
            #b = non_zero_element_count(I2,j2)
            #print(a,b)


c=non_zero_element_count(I2,2)
print(c)
